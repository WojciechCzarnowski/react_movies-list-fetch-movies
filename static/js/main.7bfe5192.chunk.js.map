{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","url","getMovie","title","a","fetch","json","FindMovie","addNewMovie","useState","setTitle","movieSelect","setMovieSelect","searchError","setSearchError","searchHandler","movieFromServer","Response","htmlFor","value","onChange","event","target","type","id","placeholder","cn","onClick","disabled","App","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCffC,EAAM,yDAEL,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAC,EAAA,sEACeC,MAAM,GAAD,OAAIJ,GAAJ,OAAUE,IAD9B,cACCb,EADD,yBAGEA,EAAMgB,QAHR,4C,sBCQA,IAAMC,EAA6B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3C,EAA0BC,mBAAS,IAAnC,mBAAON,EAAP,KAAcO,EAAd,KACA,EAAsCD,mBAAuB,MAA7D,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAEMC,EAAa,uCAAG,4BAAAX,EAAA,0DAChBD,EADgB,gCAEYD,EAASC,GAFrB,OAEZa,EAFY,OAIlBF,EAA4C,UAA7BE,EAAgBC,UAE/BL,EAAeI,GANG,2CAAH,qDAuBnB,OACE,qCACE,uBAAMzB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2B,QAAQ,cAAjC,yBAIA,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,MAAOhB,EACPiB,SAxBS,SAACC,GACpBX,EAASW,EAAMC,OAAOH,OACtBL,GAAe,IAuBLS,KAAK,OACLC,GAAG,cACHC,YAAY,sBACZlC,UAAWmC,IAAG,QAAS,CAAE,aAAcb,QAI1CA,GACC,mBAAGtB,UAAU,iBAAb,wCAKJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,kBACVoC,QAASZ,EACT,UAAQ,OAJV,kCAUF,qBAAKxB,UAAU,UAAf,SACE,wBACEgC,KAAK,SACLhC,UAAU,oBACVqC,UAAWjB,EACXgB,QAlDa,WACnBhB,IACFH,EAAYG,GACZD,EAAS,IACTE,EAAe,QA+CP,UAAQ,MALV,oDAaN,qBAAKrB,UAAU,YAAf,SACIoB,IAAgBE,GAChB,qCACE,oBAAItB,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOqB,aCxFjBkB,EAAgB,WAC3B,MAA4BpB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAegC,EAAf,KAWA,OACE,sBAAKvC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWiB,YAfG,SAACuB,GACEjC,EAClBkC,MAAK,SAAA1C,GAAK,OAAIA,EAAMU,SAAW+B,EAAS/B,WAGzC8B,EAAU,GAAD,mBAAKhC,GAAL,CAAaiC,cCT5BE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7bfe5192.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const url = 'http://www.omdbapi.com/?i=tt3896198&apikey=cb375747&t=';\n\nexport async function getMovie(title: string) {\n  const movie = await fetch(`${url}${title}`);\n\n  return movie.json();\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addNewMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addNewMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movieSelect, setMovieSelect] = useState<Movie | null>(null);\n  const [searchError, setSearchError] = useState(false);\n\n  const searchHandler = async () => {\n    if (title) {\n      const movieFromServer = await getMovie(title);\n\n      setSearchError(movieFromServer.Response === 'False');\n\n      setMovieSelect(movieFromServer);\n    }\n  };\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setSearchError(false);\n  };\n\n  const addToListHandler = () => {\n    if (movieSelect) {\n      addNewMovie(movieSelect);\n      setTitle('');\n      setMovieSelect(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={title}\n              onChange={inputHandler}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a movie title\"\n              className={cn('input', { 'is-invalid': searchError })}\n            />\n          </div>\n\n          {searchError && (\n            <p className=\"help is-danger\">\n              The movie was not found\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchHandler}\n              data-cy=\"find\"\n            >\n              Search for a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movieSelect}\n              onClick={addToListHandler}\n              data-cy=\"add\"\n            >\n              Add selected movie to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {(movieSelect && !searchError) && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movieSelect} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addNewMovie = (newMovie: Movie) => {\n    const alreadyAdded = movies\n      .some(movie => movie.imdbID === newMovie.imdbID);\n\n    if (!alreadyAdded) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}